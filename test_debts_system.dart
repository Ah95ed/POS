import 'package:flutter/material.dart';
import 'package:pos/Model/DebtModel.dart';
import 'package:pos/Repository/DebtRepository.dart';
import 'package:pos/Controller/DebtProvider.dart';

/// ููู ุงุฎุชุจุงุฑ ุจุณูุท ููุธุงู ุงูุฏููู
/// ูููู ุชุดุบููู ููุชุฃูุฏ ูู ุนูู ุงููุธุงู ุจุดูู ุตุญูุญ
void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  print('๐งช ุจุฏุก ุงุฎุชุจุงุฑ ูุธุงู ุงูุฏููู...\n');

  // ุงุฎุชุจุงุฑ ุฅูุดุงุก ูููุฐุฌ ุฏูู
  await testDebtModel();

  // ุงุฎุชุจุงุฑ ูุฒูุฏ ุงูุฏููู
  await testDebtProvider();

  print('\nโ ุชู ุงูุงูุชูุงุก ูู ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ุจูุฌุงุญ!');
}

/// ุงุฎุชุจุงุฑ ูููุฐุฌ ุงูุฏูู
Future<void> testDebtModel() async {
  print('๐ ุงุฎุชุจุงุฑ ูููุฐุฌ ุงูุฏูู...');

  // ุฅูุดุงุก ุฏูู ุฌุฏูุฏ
  final debt = DebtModel(
    id: 1,
    partyId: 1,
    partyType: 'customer',
    partyName: 'ุฃุญูุฏ ูุญูุฏ',
    partyPhone: '07901234567',
    amount: 100000,
    paidAmount: 30000,
    remainingAmount: 70000,
    dueDate: DateTime.now().add(const Duration(days: 30)),
    status: 'partiallyPaid',
    archived: false,
    notes: 'ุฏูู ุนูู ุจุถุงุนุฉ ูุจุงุนุฉ',
    createdAt: DateTime.now(),
    updatedAt: DateTime.now(),
  );

  // ุงุฎุชุจุงุฑ ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช
  assert(debt.isValid, 'ูุดู ูู ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช');
  print('   โ ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช');

  // ุงุฎุชุจุงุฑ ุชูุณูู ุงูุนููุฉ
  assert(debt.formattedAmount == '100000 ุฏ.ุน', 'ูุดู ูู ุชูุณูู ุงููุจูุบ');
  print('   โ ุชูุณูู ุงูุนููุฉ');

  // ุงุฎุชุจุงุฑ ุญุงูุฉ ุงูุฏูู
  assert(debt.statusText == 'ูุฏููุน ุฌุฒุฆูุงู', 'ูุดู ูู ุชุฑุฌูุฉ ุญุงูุฉ ุงูุฏูู');
  print('   โ ุชุฑุฌูุฉ ุญุงูุฉ ุงูุฏูู');

  // ุงุฎุชุจุงุฑ ุชุญููู ุฅูู Map
  final map = debt.toMap();
  assert(map['party_name'] == 'ุฃุญูุฏ ูุญูุฏ', 'ูุดู ูู ุชุญููู ุฅูู Map');
  print('   โ ุชุญููู ุฅูู Map');

  // ุงุฎุชุจุงุฑ ุฅูุดุงุก ูู Map
  final debtFromMap = DebtModel.fromMap(map);
  assert(debtFromMap.partyName == debt.partyName, 'ูุดู ูู ุงูุฅูุดุงุก ูู Map');
  print('   โ ุฅูุดุงุก ูู Map');

  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ูููุฐุฌ ุงูุฏูู\n');
}

/// ุงุฎุชุจุงุฑ ูุฒูุฏ ุงูุฏููู
Future<void> testDebtProvider() async {
  print('๐๏ธ ุงุฎุชุจุงุฑ ูุฒูุฏ ุงูุฏููู...');

  final provider = DebtProvider();

  // ุงุฎุชุจุงุฑ ุงูุญุงูุฉ ุงูุฃูููุฉ
  assert(provider.debts.isEmpty, 'ูุงุฆูุฉ ุงูุฏููู ูุฌุจ ุฃู ุชููู ูุงุฑุบุฉ ูู ุงูุจุฏุงูุฉ');
  assert(!provider.isLoading, 'ุญุงูุฉ ุงูุชุญููู ูุฌุจ ุฃู ุชููู false ูู ุงูุจุฏุงูุฉ');
  assert(
    provider.errorMessage == null,
    'ุฑุณุงูุฉ ุงูุฎุทุฃ ูุฌุจ ุฃู ุชููู null ูู ุงูุจุฏุงูุฉ',
  );
  print('   โ ุงูุญุงูุฉ ุงูุฃูููุฉ ุตุญูุญุฉ');

  // ุงุฎุชุจุงุฑ ุชุบููุฑ ุงูููุงุชุฑ
  provider.setPartyTypeFilter('customer');
  assert(
    provider.selectedPartyType == 'customer',
    'ูุดู ูู ุชุนููู ููุชุฑ ููุน ุงูุทุฑู',
  );
  print('   โ ุชุนููู ุงูููุงุชุฑ');

  provider.setStatusFilter('paid');
  assert(provider.selectedStatus == 'paid', 'ูุดู ูู ุชุนููู ููุชุฑ ุงูุญุงูุฉ');
  print('   โ ุชุนููู ููุชุฑ ุงูุญุงูุฉ');

  // ุงุฎุชุจุงุฑ ุงูุจุญุซ
  provider.setSearchQuery('ุฃุญูุฏ');
  assert(provider.searchQuery == 'ุฃุญูุฏ', 'ูุดู ูู ุชุนููู ุงุณุชุนูุงู ุงูุจุญุซ');
  print('   โ ุชุนููู ุงุณุชุนูุงู ุงูุจุญุซ');

  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ูุฒูุฏ ุงูุฏููู\n');
}

/// ุงุฎุชุจุงุฑ ูุนุงููุฉ ุงูุฏูู
void testDebtTransaction() {
  print('๐ณ ุงุฎุชุจุงุฑ ูุนุงููุฉ ุงูุฏูู...');

  final transaction = DebtTransactionModel(
    id: 1,
    debtId: 1,
    amountPaid: 25000,
    date: DateTime.now(),
    notes: 'ุฏูุนุฉ ุฌุฒุฆูุฉ',
    createdAt: DateTime.now(),
  );

  // ุงุฎุชุจุงุฑ ุชูุณูู ุงููุจูุบ
  assert(
    transaction.formattedAmount == '25000 ุฏ.ุน',
    'ูุดู ูู ุชูุณูู ูุจูุบ ุงููุนุงููุฉ',
  );
  print('   โ ุชูุณูู ูุจูุบ ุงููุนุงููุฉ');

  // ุงุฎุชุจุงุฑ ุชุญููู ุฅูู Map
  final map = transaction.toMap();
  assert(map['amount_paid'] == 25000, 'ูุดู ูู ุชุญููู ูุนุงููุฉ ุฅูู Map');
  print('   โ ุชุญููู ูุนุงููุฉ ุฅูู Map');

  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ูุนุงููุฉ ุงูุฏูู\n');
}
