#!/usr/bin/env dart

/// أداة تشخيص محددة لمشكلة "المنتج غير موجود"
/// تحلل المشكلة بالتفصيل وتقدم حلول واضحة

void main() async {
  print('🔍 تشخيص مشكلة "المنتج غير موجود" عند الدفع\n');

  final diagnoser = ProductNotFoundDiagnoser();
  await diagnoser.diagnose();
}

class ProductNotFoundDiagnoser {
  Future<void> diagnose() async {
    print('🎯 تحليل مشكلة "المنتج غير موجود"...\n');

    _analyzeCodeFlow();
    _identifyPossibleCauses();
    _provideStepByStepSolution();
    _showTestingSteps();
  }

  /// تحليل تدفق الكود
  void _analyzeCodeFlow() {
    print('📋 تحليل تدفق الكود:');
    print('=' * 50);

    print('1. المستخدم يضغط على زر "دفع"');
    print('2. يتم استدعاء SaleProvider.completeSale()');
    print('3. يتم التحقق من صحة البيانات (_validateStock)');
    print('4. يتم إنشاء SaleModel مع تفاصيل المنتجات');
    print('5. يتم استدعاء SaleRepository.saveSale(saleModel)');
    print('6. ❌ هنا تحدث المشكلة في السطر:');
    print('   ```');
    print('   final productQuantityResult = await txn.rawQuery(');
    print('     \'SELECT id, quantity, name FROM Items WHERE code = ?\',');
    print('     [item.productCode],');
    print('   );');
    print('   ```');
    print('7. إذا كان productQuantityResult.isEmpty، تظهر رسالة:');
    print(
      '   "المنتج غير موجود في قاعدة البيانات: [اسم المنتج] (كود: [كود المنتج])"',
    );
    print('');
  }

  /// تحديد الأسباب المحتملة
  void _identifyPossibleCauses() {
    print('🔍 الأسباب المحتملة للمشكلة:');
    print('=' * 50);

    print('السبب الأكثر شيوعاً (70%):');
    print('✗ كود المنتج في الفاتورة لا يطابق كود المنتج في قاعدة البيانات');
    print(
      '  - مثال: الفاتورة تحتوي على "PROD001" لكن قاعدة البيانات تحتوي على "prod001"',
    );
    print('  - أو: الكود يحتوي على مسافات إضافية');
    print('');

    print('السبب الثاني (20%):');
    print('✗ قاعدة البيانات فارغة من المنتجات أو المنتج محذوف');
    print('  - لا توجد منتجات في جدول Items');
    print('  - المنتج كان موجود لكن تم حذفه');
    print('');

    print('السبب الثالث (10%):');
    print('✗ مشكلة في بنية قاعدة البيانات أو الاتصال');
    print('  - جدول Items غير موجود');
    print('  - العمود code غير موجود');
    print('  - خطأ في SQL Query');
    print('');
  }

  /// تقديم حل خطوة بخطوة
  void _provideStepByStepSolution() {
    print('🛠️ الحل خطوة بخطوة:');
    print('=' * 50);

    print('الخطوة 1: تشخيص أولي');
    print('□ افتح التطبيق');
    print('□ اذهب إلى شاشة "إدارة المنتجات"');
    print('□ تحقق من وجود منتجات في القائمة');
    print('');

    print('إذا لم توجد منتجات:');
    print('✓ أضف منتج تجريبي:');
    print('  - الاسم: "منتج تجريبي"');
    print('  - الكود: "TEST001" (بأحرف كبيرة)');
    print('  - السعر: 10.00');
    print('  - الكمية: 50');
    print('□ احفظ المنتج');
    print('□ انتقل لشاشة المبيعات');
    print('□ أدخل الكود "TEST001" بالضبط');
    print('□ جرب إتمام البيع');
    print('');

    print('إذا وجدت منتجات:');
    print('✓ اختر منتج من القائمة');
    print('✓ انسخ الكود الخاص به بالضبط');
    print('✓ انتقل لشاشة المبيعات');
    print('✓ الصق الكود في حقل البحث');
    print('✓ جرب إتمام البيع');
    print('');

    print('الخطوة 2: حل مشكلة تطابق الأكواد');
    print('□ تأكد من أن الكود لا يحتوي على مسافات في البداية أو النهاية');
    print('□ تأكد من أن حالة الأحرف متطابقة (كبيرة/صغيرة)');
    print('□ تأكد من عدم وجود أحرف خاصة غير متوقعة');
    print('');

    print('الخطوة 3: إصلاح النظام (إذا لم تنجح الخطوات السابقة)');
    print('□ نفذ الأمر: dart fix_inventory_system.dart');
    print('□ أو أضف بيانات تجريبية: dart setup_sample_data.dart');
    print('□ أعد تشغيل التطبيق');
    print('');
  }

  /// عرض خطوات الاختبار
  void _showTestingSteps() {
    print('🧪 خطوات الاختبار النهائي:');
    print('=' * 50);

    print('اختبار أساسي:');
    print('1. أضف منتج جديد بكود "SIMPLE001"');
    print('2. في شاشة المبيعات، أدخل "SIMPLE001" بالضبط');
    print('3. تأكد من إضافة المنتج للفاتورة');
    print('4. أدخل مبلغ أكبر من الإجمالي كمبلغ مدفوع');
    print('5. اضغط على "دفع"');
    print('6. يجب أن تتم العملية بنجاح');
    print('');

    print('اختبار متقدم:');
    print('1. أضف عدة منتجات للفاتورة');
    print('2. تأكد من أن كل منتج له كود صحيح');
    print('3. تحقق من كفاية الكميات في المخزون');
    print('4. جرب إتمام البيع');
    print('');

    print('🔧 إذا استمرت المشكلة:');
    print('━' * 30);

    print('رسائل الخطأ وحلولها:');
    print('');

    print('رسالة: "المنتج غير موجود في قاعدة البيانات: [اسم] (كود: [كود])"');
    print('→ الحل: تحقق من صحة الكود أو أضف المنتج مرة أخرى');
    print('');

    print('رسالة: "الكمية المطلوبة أكبر من المتاح"');
    print('→ الحل: قلل الكمية أو أضف مخزون للمنتج');
    print('');

    print('رسالة: "خطأ في حفظ الفاتورة"');
    print('→ الحل: تحقق من صحة بيانات الفاتورة أو أعد تشغيل التطبيق');
    print('');

    print('🆘 للمساعدة الطارئة:');
    print('━' * 20);
    print('1. أنشئ منتج جديد بالمواصفات التالية:');
    print('   الاسم: اختبار النظام');
    print('   الكود: EMERGENCY001');
    print('   السعر: 1.00');
    print('   الكمية: 999');
    print('');
    print('2. استخدم هذا المنتج فقط في البيع');
    print('3. إذا نجح، فالمشكلة في بيانات المنتجات الأخرى');
    print('4. إذا فشل، فالمشكلة في النظام نفسه');
    print('');

    print('📞 نصائح إضافية:');
    print('• احفظ أكواد المنتجات في ملف نصي للرجوع إليها');
    print('• استخدم أكواد بسيطة مثل: ITEM001, ITEM002, إلخ');
    print('• تجنب الأحرف الخاصة والمسافات في الأكواد');
    print('• تحقق من رسائل الخطأ بعناية - تحتوي على معلومات مفيدة');
    print('• اختبر المنتجات الجديدة فور إضافتها');

    print('');
    print(
      '🎯 الهدف: التأكد من تطابق كود المنتج المُدخل مع المحفوظ في قاعدة البيانات',
    );
    print('');
    print(
      '✅ بعد تطبيق هذه الخطوات، يجب أن تختفي مشكلة "المنتج غير موجود" نهائياً!',
    );
  }
}
